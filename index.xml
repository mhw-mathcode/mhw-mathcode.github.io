<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>mhw</title>
        <link>https://mhw-mathcode.github.io/</link>
        <description>Recent content on mhw</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>zh-cn</language>
        <copyright>mhw-mathcode</copyright><atom:link href="https://mhw-mathcode.github.io/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>学习笔记 数据结构</title>
        <link>https://mhw-mathcode.github.io/p/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/</link>
        <pubDate>Sun, 22 Jun 2025 11:50:20 +0800</pubDate>
        
        <guid>https://mhw-mathcode.github.io/p/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/</guid>
        <description></description>
        </item>
        <item>
        <title>学习笔记-操作系统</title>
        <link>https://mhw-mathcode.github.io/p/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/</link>
        <pubDate>Tue, 17 Jun 2025 18:27:49 +0800</pubDate>
        
        <guid>https://mhw-mathcode.github.io/p/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/</guid>
        <description>&lt;p&gt;开个坑，主要是记录后续复习操作系统的一些笔记与完成 6.S081 课程的 lab 。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>学习笔记-机器学习</title>
        <link>https://mhw-mathcode.github.io/p/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/</link>
        <pubDate>Mon, 16 Jun 2025 19:29:56 +0800</pubDate>
        
        <guid>https://mhw-mathcode.github.io/p/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/</guid>
        <description>&lt;h2 id=&#34;0-算法速览&#34;&gt;0 算法速览
&lt;/h2&gt;&lt;p&gt;监督学习算法：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;线性回归（Linear Regression）：用于回归任务，预测连续的数值。&lt;/li&gt;
&lt;li&gt;逻辑回归（Logistic Regression）：用于二分类任务，预测类别。&lt;/li&gt;
&lt;li&gt;决策树（Decision Tree）：基于树状结构进行决策的分类或回归方法。&lt;/li&gt;
&lt;li&gt;支持向量机（SVM）：用于分类任务，构建超平面进行分类。&lt;/li&gt;
&lt;li&gt;K近邻算法&lt;/li&gt;
&lt;li&gt;集成学习&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;无监督学习算法：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;K-means 聚类：通过聚类中心将数据分组。&lt;/li&gt;
&lt;li&gt;主成分分析（PCA）：用于降维，提取数据的主成分。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;01-线性回归&#34;&gt;0.1 线性回归
&lt;/h3&gt;&lt;p&gt;线性回归 (Linear Regression) 是一种用于预测连续值的最基本的机器学习算法，它假设目标变量 y 和特征变量 x 之间存在线性关系，并试图找到一条最佳拟合直线来描述这种关系。&lt;/p&gt;
&lt;p&gt;常用的误差函数是均方误差 (MSE) : $MSE = 1/n * Σ(y_i - y_{pred_i})^2$&lt;/p&gt;
&lt;h4 id=&#34;求解方法&#34;&gt;求解方法
&lt;/h4&gt;&lt;h5 id=&#34;1-最小二乘法&#34;&gt;1. 最小二乘法
&lt;/h5&gt;&lt;p&gt;最小二乘法的目标是最小化残差平方和（RSS），其公式为：$RSS = \sum_{i=1}^n(y_i - \hat{y}_i)^2$&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://mhw-mathcode.github.io/p/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/1.jpg&#34;
	width=&#34;1440&#34;
	height=&#34;1080&#34;
	srcset=&#34;https://mhw-mathcode.github.io/p/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/1_hu_dc3fae64383c103d.jpg 480w, https://mhw-mathcode.github.io/p/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/1_hu_cb0bc3cbb612de23.jpg 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;推导&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;133&#34;
		data-flex-basis=&#34;320px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;得到最佳的 $w, b$&lt;/p&gt;
$$
\begin{bmatrix} w \\ b \end{bmatrix} = \begin{bmatrix} \sum_{i=1}^n x_i^2 &amp; \sum_{i=1}^n x_i \\ \sum_{i=1}^n x_i &amp; n \end{bmatrix}^{-1} \begin{bmatrix} \sum_{i=1}^n x_i y_i \\ \sum_{i=1}^n y_i \end{bmatrix}
$$&lt;h5 id=&#34;2-梯度下降法&#34;&gt;2. 梯度下降法
&lt;/h5&gt;&lt;p&gt;梯度下降法的目标是最小化损失函数 $J(w,b)$ 。对于线性回归问题，通常使用均方误差（MSE）作为损失函数：&lt;/p&gt;
$$ J(w, b) = \frac{1}{2m} \sum_{i=1}^{m} (y_i - \hat{y}_i)^2 $$&lt;p&gt;参数更新：&lt;/p&gt;
$$ w := w - \alpha \frac{\partial J}{\partial w} \quad b := b - \alpha \frac{\partial J}{\partial b} $$&lt;p&gt;梯度下降法的步骤&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;初始化参数：初始化 w 和 b 的值（通常设为 0 或随机值）。&lt;/li&gt;
&lt;li&gt;计算损失函数：计算当前参数下的损失函数值 $J(w,b)$ 。&lt;/li&gt;
&lt;li&gt;计算梯度：计算损失函数对 w 和 b 的偏导数。&lt;/li&gt;
&lt;li&gt;更新参数：根据梯度更新 w 和 b。&lt;/li&gt;
&lt;li&gt;重复迭代：重复步骤 2 到 4，直到损失函数收敛或达到最大迭代次数。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;02-逻辑回归&#34;&gt;0.2 逻辑回归
&lt;/h3&gt;&lt;p&gt;逻辑回归（Logistic Regression）是一种广泛应用于分类问题的统计学习方法，尽管名字中带有&amp;quot;回归&amp;quot;，但它实际上是一种用于二分类或多分类问题的算法。&lt;/p&gt;
&lt;p&gt;逻辑回归通过使用逻辑函数（也称为 Sigmoid 函数）将线性回归的输出映射到 0 和 1 之间，从而预测某个事件发生的概率。建立模型：&lt;/p&gt;
\[
p(y = 1|X) = \sigma(w^T X + b)
\]&lt;p&gt;其中：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;\( X \) 是输入特征（可以是多个特征组成的向量）。&lt;/li&gt;
&lt;li&gt;\( w \) 是权重向量。&lt;/li&gt;
&lt;li&gt;\( b \) 是偏置项。&lt;/li&gt;
&lt;li&gt;\(\sigma(z) = \frac{1}{1+e^{-z}}\) 是Sigmoid函数。Sigmoid函数将模型的输出值 \((w^T X + b)\) 映射到0到1之间，因此它可以看作是属于类别1的概率。注意 $\sigma&amp;rsquo;(z) = \sigma(z)(1 - \sigma(z))$ 。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;使用对数损失函数&lt;/p&gt;
\[ L(\theta) = 
  \begin{cases} 
   -\log(p), &amp; \text{if } y = 1 \\
   -\log(1-p), &amp; \text{if } y = 0 
  \end{cases}
\]&lt;p&gt;合并得到单个样品的损失函数&lt;/p&gt;
\[ 
    L(\theta) = -ylog(p)-(1-y)log(1-p)
\]&lt;p&gt;因此总体损失函数（也就是交叉熵损失函数）&lt;/p&gt;
\[ L(\theta) = -\frac{1}{m} \sum_{i=1}^{m} \left[ y^{(i)} \log(p^{(i)}) + (1 - y^{(i)}) \log(1 - p^{(i)}) \right] \]&lt;h4 id=&#34;求解方法-1&#34;&gt;求解方法
&lt;/h4&gt;&lt;h5 id=&#34;梯度下降法&#34;&gt;梯度下降法
&lt;/h5&gt;&lt;p&gt;对 \(w\) 的梯度：
&lt;/p&gt;
\[ \frac{\partial J(w, b)}{\partial w} = \frac{1}{m} \sum_{i=1}^{m} (h_\theta(x^{(i)}) - y^{(i)}) x^{(i)} \]&lt;p&gt;对 \(b\) 的梯度：
&lt;/p&gt;
\[ \frac{\partial J(w, b)}{\partial b} = \frac{1}{m} \sum_{i=1}^{m} (h_\theta(x^{(i)}) - y^{(i)}) \]&lt;p&gt;&lt;img src=&#34;https://mhw-mathcode.github.io/p/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/2.jpg&#34;
	width=&#34;1279&#34;
	height=&#34;1706&#34;
	srcset=&#34;https://mhw-mathcode.github.io/p/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/2_hu_e9d3f2f7cdc08657.jpg 480w, https://mhw-mathcode.github.io/p/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/2_hu_1c4e3fb87193097c.jpg 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;推导&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;74&#34;
		data-flex-basis=&#34;179px&#34;
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;03-决策树&#34;&gt;0.3 决策树
&lt;/h3&gt;&lt;p&gt;决策树（Decision Tree），它是一种以树形数据结构来展示决策规则和分类结果的模型，作为一种归纳学习算法，其重点是将看似无序、杂乱的已知数据，通过某种技术手段将它们转化成可以预测未知数据的树状模型，每一条从根结点（对最终分类结果贡献最大的属性）到叶子结点（最终分类结果）的路径都代表一条决策的规则。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://mhw-mathcode.github.io/p/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/3.png&#34;
	width=&#34;754&#34;
	height=&#34;561&#34;
	srcset=&#34;https://mhw-mathcode.github.io/p/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/3_hu_690baba9cb1d5aaf.png 480w, https://mhw-mathcode.github.io/p/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/3_hu_c7dbe716591b324a.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;决策树构建过程&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;134&#34;
		data-flex-basis=&#34;322px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;在这个过程中，寻找最优划分属性是决策树过程中的重点，那么应该如何求解呢？&lt;/p&gt;
&lt;h4 id=&#34;求解方法-2&#34;&gt;求解方法
&lt;/h4&gt;&lt;h5 id=&#34;1-信息增益&#34;&gt;1. 信息增益
&lt;/h5&gt;&lt;p&gt;首先引入信息熵的概念&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;信息熵：描述随机变量的不确定性（也就是混乱程度）。
假设某随机变量的概率分布为：$P(X=x_i) = p_i, \quad i = 1, 2, \ldots, n$ ，则它的信息熵计算公式为：$H(X) = - \sum_{i=1}^{n} p_i \log p_i$&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;在决策树中，信息熵&lt;/p&gt;
\[ H(D) = - \sum_{k=1}^{K} \frac{|D_k|}{|D|} \log \frac{|D_k|}{|D|} \]&lt;ul&gt;
&lt;li&gt;\( D \)：整个数据集&lt;/li&gt;
&lt;li&gt;\( D_k \)：第 \( k \) 个类的样本子集&lt;/li&gt;
&lt;li&gt;\( \frac{|D_k|}{|D|} \)：第 \( k \) 类的概率&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;条件熵&lt;/p&gt;
\[ H(D|A) = \sum_{i=1}^{n} \frac{|D_i|}{|D|} H(D_i) \]&lt;p&gt;其中 \( H(D_i) \) 是每个子集 \( D_i \) 的信息熵&lt;/p&gt;
\[ H(D_i) = - \sum_{k=1}^{K} \frac{|D_{ik}|}{|D_i|} \log \frac{|D_{ik}|}{|D_i|} \]&lt;ul&gt;
&lt;li&gt;\( A \)：某个属性&lt;/li&gt;
&lt;li&gt;\( D_i \)：属性 \( A \) 的第 \( i \) 个取值所对应的数据子集&lt;/li&gt;
&lt;li&gt;\( D_{ik} \)：在第 \( i \) 个子集中属于第 \( k \) 类的样本数&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;因此有&lt;/p&gt;
\[ H(D|A) = - \sum_{i=1}^{n} \frac{|D_i|}{|D|} \sum_{k=1}^{K} \frac{|D_{ik}|}{|D_i|} \log \frac{|D_{ik}|}{|D_i|} \]&lt;p&gt;特征 \( A \) 对训练数据集 \( D \) 的信息增益 \( gain(D, A) \) 定义为集合 \( D \) 的信息熵 \( H(D) \) 与特征 \( A \) 给定条件下 \( D \) 的信息条件熵 \( H(D|A) \) 之差，即公式为：&lt;/p&gt;
\[ gain(D, A) = H(D) - H(D|A) \]&lt;p&gt;信息增益表示得知特征 \( X \) 的信息而使得类 \( Y \) 的信息的不确定性减少的程度，因此信息增益最大的属性就是最优划分属性，标志性算法 $ID3$ 。&lt;/p&gt;
&lt;h5 id=&#34;2-增益比&#34;&gt;2. 增益比
&lt;/h5&gt;&lt;p&gt;信息增益虽然在理论上可以找到最优的划分属性，但在某些情况下会存在问题。信息增益比较偏好可取值较多的属性。因此为了矫正信息增益偏好的问题，使算法不偏向可取值较多的属性，引申出了增益比的思想。&lt;/p&gt;
\[ Gain\_ratio(D, A) = \frac{Gain(D, A)}{H(A)} \]&lt;p&gt;可以看出，增益比就是信息增益除以属性 $A$ 的信息熵，当属性 $A$ 可取值增多的时候，$H(A)$ 一般也增大，因此在一定程度上能抑制信息增益偏好取值多的属性的特点，但是增益比偏好取值较少的属性。&lt;/p&gt;
&lt;p&gt;算法 $C4.5$ 是算法 $ID3$ 的改进版，它使用了信息增益和增益比两种选择算法，先选出信息增益高于平均水平的属性，然后再在这些属性中选择增益比最高的，作为最优划分属性。这样综合了信息增益和增益比的优点，可以取得较好的效果。&lt;/p&gt;
&lt;h5 id=&#34;3-基尼指数&#34;&gt;3. 基尼指数
&lt;/h5&gt;&lt;p&gt;基尼指数是在样本集中随机抽出两个样本不同类别的概率。当样本集越不纯的时候，这个概率也就越大，即基尼指数也越大。这个规律与信息熵的相同。&lt;/p&gt;
\[ Gini(D) = \sum_{k=1}^{n} \sum_{k&#39; \neq k} p_k p_{k&#39;} = 1 - \sum_{k=1}^{n} p_k^2 \]&lt;p&gt;使用基尼指数来选择最优划分属性也是对比不同属性划分后基尼指数的差值，选择使样本集基尼指数减小最多的属性。&lt;/p&gt;
\[ Gain(D, a) = Gini(D) - \sum_{i=1}^{n} \frac{|D^i|}{|D|} Gini(D^i) \]&lt;p&gt;著名的 $CART$ 决策树就是使用基尼指数来作为划分准则， $CART$ 决策树与 $ID3$ 和 $C4.5$ 的区别：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;划分准则不同，CART决策树使用基尼指数， $ID3$ 和 $C4.5$ 使用信息熵。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;$ID3$ 和 $C4.5$ 划分时，一个节点可以划分为多个子结点，子结点数量根据属性可取值的数量决定。而 $CART$ 决策树是严格的二叉树结构，就是说 $1$ 个节点最多划分为 $2$ 子结点。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;04-支持向量机&#34;&gt;0.4 支持向量机
&lt;/h3&gt;&lt;p&gt;支持向量机（Support Vector Machine，简称 SVM）是一种监督学习算法，主要用于分类和回归问题。&lt;/p&gt;
&lt;p&gt;SVM 的核心思想是找到一个最优的超平面，将不同类别的数据分开。这个超平面不仅要能够正确分类数据，还要使得两个类别之间的间隔（margin）最大化。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;支持向量：支持向量是离超平面最近的样本点。这些支持向量对于定义超平面至关重要。支持向量机通过最大化支持向量到超平面的距离（即最大化间隔）来选择最佳的超平面。&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;当训练样本&lt;strong&gt;线性可分&lt;/strong&gt;时，通过&lt;strong&gt;硬间隔最大化&lt;/strong&gt;，学习一个&lt;strong&gt;线性可分支持向量机&lt;/strong&gt;；&lt;/p&gt;
&lt;p&gt;当训练样本&lt;strong&gt;近似线性可分&lt;/strong&gt;时，通过&lt;strong&gt;软间隔最大化&lt;/strong&gt;，学习一个&lt;strong&gt;线性支持向量机&lt;/strong&gt;；&lt;/p&gt;
&lt;p&gt;当训练样本&lt;strong&gt;线性不可分&lt;/strong&gt;时，通过&lt;strong&gt;核技巧和软间隔最大化&lt;/strong&gt;，学习一个&lt;strong&gt;非线性支持向量机&lt;/strong&gt;。&lt;/p&gt;
&lt;h4 id=&#34;求解方法-3&#34;&gt;求解方法
&lt;/h4&gt;&lt;h5 id=&#34;间隔最大化和支持向量&#34;&gt;间隔最大化和支持向量
&lt;/h5&gt;&lt;p&gt;好难……&lt;/p&gt;
&lt;h3 id=&#34;05-k近邻算法&#34;&gt;0.5 K近邻算法
&lt;/h3&gt;&lt;p&gt;K 近邻算法（K-Nearest Neighbors，简称 KNN）是一种简单且常用的分类和回归算法。&lt;/p&gt;
&lt;p&gt;K 近邻算法属于监督学习的一种，核心思想是通过计算待分类样本与训练集中各个样本的距离，找到距离最近的 K 个样本，然后根据这 K 个样本的类别或值来预测待分类样本的类别或值。&lt;/p&gt;
&lt;h4 id=&#34;求解方法-4&#34;&gt;求解方法
&lt;/h4&gt;&lt;p&gt;基本步骤：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;计算距离：计算待分类样本与训练集中每个样本的距离。常用的距离度量方法有欧氏距离、曼哈顿距离等。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;选择 K 个最近邻：根据计算出的距离，选择距离最近的 K 个样本。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;投票或平均：对于分类问题，K 个最近邻中出现次数最多的类别即为待分类样本的类别；对于回归问题，K 个最近邻的值的平均值即为待分类样本的值。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;06-集成学习&#34;&gt;0.6 集成学习
&lt;/h3&gt;&lt;h3 id=&#34;07-k-means-聚类&#34;&gt;0.7 K-means 聚类
&lt;/h3&gt;&lt;p&gt;K-means 聚类是一种常用的基于距离的聚类算法，旨在将数据集划分为 K 个簇。算法的目标是最小化簇内的点到簇中心的距离总和。&lt;/p&gt;
&lt;h4 id=&#34;求解方法-5&#34;&gt;求解方法
&lt;/h4&gt;&lt;p&gt;基本步骤：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;选择 $K$ 值：设定簇的数量 。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;初始化簇中心：随机选择 $K$ 个数据点作为初始簇中心（centroids）。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;分配步骤（Assignment Step）：对于数据集中的每个点，将它分配到最近的簇中心对应的簇。这里的“距离”通常使用欧氏距离（Euclidean distance）。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;更新步骤（Update Step）：根据当前的簇分配，重新计算每个簇的中心，即计算簇内所有点的均值作为新的簇中心。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;重复 3 和 4 步：不断重复分配和更新步骤，直到簇中心不再发生变化（收敛）或达到指定的最大迭代次数。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;确定最佳的簇数 $K$ 是 $K-means$ 聚类中的一个难点。聚类的目标是使得每个样本点到距离其最近的聚类中心的总误差平方和（也即聚类的代价函数，记作 $SSE$ ）尽可能小。&lt;/p&gt;
&lt;p&gt;空间中数据对象与聚类中心间的欧式距离计算公式为：&lt;/p&gt;
\[ d(x, C_i) = \sqrt{\sum_{j=1}^{m} (x_j - C_{ij})^2} \]&lt;p&gt;其中：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;\( x \) 为数据对象，&lt;/li&gt;
&lt;li&gt;\( C_i \) 为第 \( i \) 个聚类中心，&lt;/li&gt;
&lt;li&gt;\( m \) 为数据对象的维度，&lt;/li&gt;
&lt;li&gt;\( x_j \)，\( C_{ij} \) 为 \( x \) 和 \( C_i \) 的第 \( j \) 个属性值。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;整个数据集的误差平方和 SSE 计算公式为：&lt;/p&gt;
\[ SSE = \sum_{i=1}^{k} \sum_{x \in C_i} |d(x, C_i)|^2 \]&lt;p&gt;其中：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;SSE 的大小表示聚类结果的好坏，&lt;/li&gt;
&lt;li&gt;\( k \) 为簇的个数。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;理论上随着 $K$ 的增加， $SSE$ 会单调递减，当 $K$ 超过某一个数后，每个类簇的聚合程度不再获得显著提升，此时我们就可以认为已找到最佳 $K$ 的取值（肘部法）。&lt;/p&gt;
&lt;h4 id=&#34;k-means&#34;&gt;K-means++
&lt;/h4&gt;&lt;p&gt;K-means++ 是一种改进的初始化方法，可以帮助选择更合理的初始中心，优先选择“距离最远”的点作为初始质心，减少陷入局部最优的风险。&lt;/p&gt;
&lt;p&gt;基本步骤：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;从数据集 $\mathcal{X}$ 中随机（均匀分布）选取一个样本点作为第一个初始聚类中心;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;接着计算每个样本与当前已有聚类中心之间的最短距离，用 $D(x)$ 表示；然后计算每个样本点被选为下一个聚类中心的概率 $P(x) = \frac{D(x)^2}{\sum_{x \in \mathcal{X}} D(x)^2}$，最后选择最大概率值（或者概率分布）所对应的样本点作为下一个簇中心；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;重复步骤 2，直到选择 $K$ 个聚类中心&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;优势：避免随机初始化，加快收敛速度，聚类结果更加稳定。&lt;/p&gt;
&lt;h3 id=&#34;08-主成分分析&#34;&gt;0.8 主成分分析
&lt;/h3&gt;&lt;p&gt;主成分分析（PCA）是一种无监督学习方法，旨在通过线性变换将原始的高维数据映射到一个低维空间，同时尽可能保留数据的方差（即信息量）。简单来说，PCA 的目标是找到一组新的坐标轴（称为主成分），这些坐标轴能够捕捉数据中最大的变异性，并用更少的维度来近似表示原始数据。&lt;/p&gt;
&lt;h4 id=&#34;求解方法-6&#34;&gt;求解方法
&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;数据中心化：首先将数据中心化，即让每个特征的均值变为 0。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;计算协方差矩阵：
&lt;/p&gt;
\[ \text{Cov}(X, Y) = \frac{1}{n-1} \sum_{i=1}^{n} (X_i - \bar{X})(Y_i - \bar{Y}) \]&lt;p&gt;
协方差为正时，说明X和Y是正相关关系；协方差为负时，说明X和Y是负相关关系；协方差为0时，说明X和Y是相互独立。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;特征值分解：对协方差矩阵进行特征值分解，得到主成分的方向（特征向量）和重要性（特征值）。&lt;/p&gt;
\[ \det(A - \lambda I) = 0 \]&lt;p&gt;
其中：&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;\( A \) 是协方差矩阵，&lt;/li&gt;
&lt;li&gt;\( \lambda \) 是特征值，&lt;/li&gt;
&lt;li&gt;\( I \) 是单位矩阵。
得到特征值 \( \lambda \) 以后代入 $(A - \lambda I)v_1 = 0$ 解得特征向量 $v_1$ 。&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;
&lt;p&gt;排序和选择主成分：将特征值从大到小排序，特征值最大的为第一个主成分，捕捉了数据中最大的变化，也就是数据分布中最显著的变化方向。第二个主成分与第一个主成分正交（相互垂直），且在正交约束下方差次大的方向。后续主成分：依此类推，每个主成分都与前面的主成分正交，并按特征值大小递减排列。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;投影数据：将中心化后的数据投影到第一个主成分上，得到降维后的结果。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;1-引言&#34;&gt;1 引言
&lt;/h2&gt;&lt;h3 id=&#34;11-什么是机器学习&#34;&gt;1.1 什么是机器学习
&lt;/h3&gt;&lt;p&gt;一个好的学习问题定义如下：一个程序被认为能从经验 E 中学习，解决任务 T ，达到性能度量值 P ，当且仅当，有了经验 E 后，经过 P 评判，程序在处理 T 时的性能有所提升。&lt;/p&gt;
&lt;p&gt;目前存在几种不同类型的学习算法，其中主要的两种类型被我们称之为：&lt;strong&gt;监督学习&lt;/strong&gt;和&lt;strong&gt;无监督学习&lt;/strong&gt;。&lt;/p&gt;
&lt;h3 id=&#34;12-监督学习&#34;&gt;1.2 监督学习
&lt;/h3&gt;&lt;p&gt;监督学习：给定带有标签的数据，模型通过学习输入和标签之间的关系来做预测。&lt;/p&gt;
&lt;p&gt;回归 (regression) 问题：推测出这一系列连续值属性。&lt;/p&gt;
&lt;p&gt;分类 (classification) 问题：推测出离散的输出值。&lt;/p&gt;
&lt;h3 id=&#34;13-无监督学习&#34;&gt;1.3 无监督学习
&lt;/h3&gt;&lt;p&gt;无监督学习：没有标签的数据，模型通过探索数据中的结构或模式来进行学习。&lt;/p&gt;
&lt;p&gt;聚类算法：将数据集划分成两个不同的簇。&lt;/p&gt;
&lt;p&gt;鸡尾酒算法：分离两种声音。（一个具体实例，仅仅只需要一行代码实现）&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-py&#34; data-lang=&#34;py&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;W&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;v&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;svd&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;repmat&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;sum&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;2-单变量线性回归-linear-regression-with-one-variable&#34;&gt;2 单变量线性回归 (Linear Regression with One Variable)
&lt;/h2&gt;</description>
        </item>
        <item>
        <title>2024 ICPC 昆明区域赛 vlog</title>
        <link>https://mhw-mathcode.github.io/p/2024-icpc-%E6%98%86%E6%98%8E%E5%8C%BA%E5%9F%9F%E8%B5%9B-vlog/</link>
        <pubDate>Fri, 30 May 2025 20:02:21 +0800</pubDate>
        
        <guid>https://mhw-mathcode.github.io/p/2024-icpc-%E6%98%86%E6%98%8E%E5%8C%BA%E5%9F%9F%E8%B5%9B-vlog/</guid>
        <description>&lt;h2 id=&#34;day1&#34;&gt;DAY1
&lt;/h2&gt;&lt;p&gt;因为队友有考试，所以我们集体在周六早晨赶的七点的飞机来昆明，当时在登机的时候遇到超级漂亮的天空，笑着和队友说这是大捷的前兆hh。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://mhw-mathcode.github.io/p/2024-icpc-%E6%98%86%E6%98%8E%E5%8C%BA%E5%9F%9F%E8%B5%9B-vlog/0.jpg&#34;
	width=&#34;1706&#34;
	height=&#34;1279&#34;
	srcset=&#34;https://mhw-mathcode.github.io/p/2024-icpc-%E6%98%86%E6%98%8E%E5%8C%BA%E5%9F%9F%E8%B5%9B-vlog/0_hu_d9c52aa81b79304a.jpg 480w, https://mhw-mathcode.github.io/p/2024-icpc-%E6%98%86%E6%98%8E%E5%8C%BA%E5%9F%9F%E8%B5%9B-vlog/0_hu_c4a28dd12021a1f2.jpg 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;登记信息&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;133&#34;
		data-flex-basis=&#34;320px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://mhw-mathcode.github.io/p/2024-icpc-%E6%98%86%E6%98%8E%E5%8C%BA%E5%9F%9F%E8%B5%9B-vlog/1.png&#34;
	width=&#34;1440&#34;
	height=&#34;1080&#34;
	srcset=&#34;https://mhw-mathcode.github.io/p/2024-icpc-%E6%98%86%E6%98%8E%E5%8C%BA%E5%9F%9F%E8%B5%9B-vlog/1_hu_202df5d4a9650c75.png 480w, https://mhw-mathcode.github.io/p/2024-icpc-%E6%98%86%E6%98%8E%E5%8C%BA%E5%9F%9F%E8%B5%9B-vlog/1_hu_e9f47da831beae34.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;登机前的天空&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;133&#34;
		data-flex-basis=&#34;320px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;然后来酒店办了入住直接冲向学校了，当时整个人都饿毁了，两荤三素库库炫，也没来得及拍照  。不过云大真的很漂亮，整个云南十二月还是绿叶环绕，本北方人表示哪见过这个。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://mhw-mathcode.github.io/p/2024-icpc-%E6%98%86%E6%98%8E%E5%8C%BA%E5%9F%9F%E8%B5%9B-vlog/2.png&#34;
	width=&#34;1440&#34;
	height=&#34;1080&#34;
	srcset=&#34;https://mhw-mathcode.github.io/p/2024-icpc-%E6%98%86%E6%98%8E%E5%8C%BA%E5%9F%9F%E8%B5%9B-vlog/2_hu_d814971505731474.png 480w, https://mhw-mathcode.github.io/p/2024-icpc-%E6%98%86%E6%98%8E%E5%8C%BA%E5%9F%9F%E8%B5%9B-vlog/2_hu_d0e79f36ba342595.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;很漂亮的云大&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;133&#34;
		data-flex-basis=&#34;320px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://mhw-mathcode.github.io/p/2024-icpc-%E6%98%86%E6%98%8E%E5%8C%BA%E5%9F%9F%E8%B5%9B-vlog/3.png&#34;
	width=&#34;1440&#34;
	height=&#34;1920&#34;
	srcset=&#34;https://mhw-mathcode.github.io/p/2024-icpc-%E6%98%86%E6%98%8E%E5%8C%BA%E5%9F%9F%E8%B5%9B-vlog/3_hu_6668454c256f730.png 480w, https://mhw-mathcode.github.io/p/2024-icpc-%E6%98%86%E6%98%8E%E5%8C%BA%E5%9F%9F%E8%B5%9B-vlog/3_hu_670c91392055df3f.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;ICPC昆明站 (1)&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;75&#34;
		data-flex-basis=&#34;180px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://mhw-mathcode.github.io/p/2024-icpc-%E6%98%86%E6%98%8E%E5%8C%BA%E5%9F%9F%E8%B5%9B-vlog/3.1.jpg&#34;
	width=&#34;1706&#34;
	height=&#34;1279&#34;
	srcset=&#34;https://mhw-mathcode.github.io/p/2024-icpc-%E6%98%86%E6%98%8E%E5%8C%BA%E5%9F%9F%E8%B5%9B-vlog/3.1_hu_f327e17bef9184e3.jpg 480w, https://mhw-mathcode.github.io/p/2024-icpc-%E6%98%86%E6%98%8E%E5%8C%BA%E5%9F%9F%E8%B5%9B-vlog/3.1_hu_5a0f1cfc1a522ee2.jpg 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;ICPC昆明站 (2)&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;133&#34;
		data-flex-basis=&#34;320px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;然后热身赛直接开打。A题a+b？B题队友猜一发结论直接过了。D题偷听斜对面什么父亲，然后随便一手模发现每个点权值减去父亲权值乘起来直接过了。C题队友一开始思路有点问题，后来lyr测点别的东西我俩直接玩手机了。结果快最后了zmd想到了正解，赛后一问黄队还真对了。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://mhw-mathcode.github.io/p/2024-icpc-%E6%98%86%E6%98%8E%E5%8C%BA%E5%9F%9F%E8%B5%9B-vlog/4.png&#34;
	width=&#34;1440&#34;
	height=&#34;1080&#34;
	srcset=&#34;https://mhw-mathcode.github.io/p/2024-icpc-%E6%98%86%E6%98%8E%E5%8C%BA%E5%9F%9F%E8%B5%9B-vlog/4_hu_a7fae2b93e14909.png 480w, https://mhw-mathcode.github.io/p/2024-icpc-%E6%98%86%E6%98%8E%E5%8C%BA%E5%9F%9F%E8%B5%9B-vlog/4_hu_fd9aa37252e5bb49.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;热身赛&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;133&#34;
		data-flex-basis=&#34;320px&#34;
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;day2&#34;&gt;DAY2
&lt;/h2&gt;&lt;p&gt;有点紧张！沈阳铜首确实给我们的压力太大了，赛前买了一大批物资，面包，士力架，红牛，赛前满足每位队员的一切合理与不合理的需求(bushi)&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://mhw-mathcode.github.io/p/2024-icpc-%E6%98%86%E6%98%8E%E5%8C%BA%E5%9F%9F%E8%B5%9B-vlog/5.png&#34;
	width=&#34;904&#34;
	height=&#34;1660&#34;
	srcset=&#34;https://mhw-mathcode.github.io/p/2024-icpc-%E6%98%86%E6%98%8E%E5%8C%BA%E5%9F%9F%E8%B5%9B-vlog/5_hu_a5198c4182762cf9.png 480w, https://mhw-mathcode.github.io/p/2024-icpc-%E6%98%86%E6%98%8E%E5%8C%BA%E5%9F%9F%E8%B5%9B-vlog/5_hu_ddf100b6c37255f2.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;赛前友好交流&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;54&#34;
		data-flex-basis=&#34;130px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;开打！上来队友直接扔给我一道计算几何，说极角排序一下应该就完了。我觉得也是于是上机开始敲。小小调整一下交了结果wa了。此时队友上机写M构造，结果几种方式全都有问题。只能说逆风开局是我们队的常态，甚至比沈阳的台风开局还要好一点。然后zmd开始了无敌节奏，先想出了M超级正确且好写且可证明的思路，直接过了，然后上机又把J题秒了。期间lyr帮忙手推了J题小数据特例并且帮我找到了H题一个小讨论的错误（某人唯二贡献哈哈哈）。然后我上机改改也过了H。赛后想想这个H当时真的很唐，直接用atan2搞出角度其实就完了，根本用不到极角排序。&lt;/p&gt;
&lt;p&gt;然后有点卡题的，当时我说开出CGL其实是应该能稳银的（很棒的前瞻性），于是开始全力开这三题。lyr一直在想L，我看了C就觉得是根号分治，但是一直不知道分完怎么算。zmd张老板直接灵感一现，从结果往回推，轻松过样例！交上去却t了。然后下机想想就找到了问题，问我一个式子，（然后巴拉巴拉交流一堆），改一下直接过了！这个C开的很帅。然后我顺着zmd思路想G题，zmd写了一个记忆化搜索，re了，改了下wa了，好在很快找到反例发现比较难记忆，并且也改不对样例。这时候我就想是不是直接爆搜就完了，上机十分钟写完肯定过样例的，然后试了极限的俩数结果都跑的飞快？于是决定交一发结果直接ac了？？？我真的对这发没报希望啊？最后直接all in L题。zmd和lyr统一了思路，lyr写完交上去wa了，并且我造了一堆样例都没能出错。这时候张老板直接把lyr踹下机开始重构，微微调整过了第一个样例就觉得直接交，结果t了？当时三人盯着那几个while循环瞅，lyr建议关流在交一次（因为debug所以关了关流，交的时候忘开了），结果直接a了！当时张老板直接大喊：“过了！”我们直接下班观战！&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://mhw-mathcode.github.io/p/2024-icpc-%E6%98%86%E6%98%8E%E5%8C%BA%E5%9F%9F%E8%B5%9B-vlog/6.png&#34;
	width=&#34;1440&#34;
	height=&#34;1923&#34;
	srcset=&#34;https://mhw-mathcode.github.io/p/2024-icpc-%E6%98%86%E6%98%8E%E5%8C%BA%E5%9F%9F%E8%B5%9B-vlog/6_hu_b7e2c153bd1f40c2.png 480w, https://mhw-mathcode.github.io/p/2024-icpc-%E6%98%86%E6%98%8E%E5%8C%BA%E5%9F%9F%E8%B5%9B-vlog/6_hu_cf49d8d84261a213.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;气球最多的一集&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;74&#34;
		data-flex-basis=&#34;179px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;最后稳稳拿银~&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://mhw-mathcode.github.io/p/2024-icpc-%E6%98%86%E6%98%8E%E5%8C%BA%E5%9F%9F%E8%B5%9B-vlog/7.1.jpg&#34;
	width=&#34;1279&#34;
	height=&#34;1706&#34;
	srcset=&#34;https://mhw-mathcode.github.io/p/2024-icpc-%E6%98%86%E6%98%8E%E5%8C%BA%E5%9F%9F%E8%B5%9B-vlog/7.1_hu_b93bd9f90678ad12.jpg 480w, https://mhw-mathcode.github.io/p/2024-icpc-%E6%98%86%E6%98%8E%E5%8C%BA%E5%9F%9F%E8%B5%9B-vlog/7.1_hu_5b2ea2bf03beca30.jpg 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;好漂亮的银奖&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;74&#34;
		data-flex-basis=&#34;179px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://mhw-mathcode.github.io/p/2024-icpc-%E6%98%86%E6%98%8E%E5%8C%BA%E5%9F%9F%E8%B5%9B-vlog/7.png&#34;
	width=&#34;1440&#34;
	height=&#34;1080&#34;
	srcset=&#34;https://mhw-mathcode.github.io/p/2024-icpc-%E6%98%86%E6%98%8E%E5%8C%BA%E5%9F%9F%E8%B5%9B-vlog/7_hu_39566c93ef55eb7.png 480w, https://mhw-mathcode.github.io/p/2024-icpc-%E6%98%86%E6%98%8E%E5%8C%BA%E5%9F%9F%E8%B5%9B-vlog/7_hu_49733c3b0a9fdf3e.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;好漂亮的银奖和好漂亮的队牌&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;133&#34;
		data-flex-basis=&#34;320px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;很不错的昆明，最后没有遗憾退役，赛后要了哥哥的签名和合照，美滋滋~&lt;/p&gt;
&lt;p&gt;晚上去一家特色菜馆，超级火爆，最后人均20？&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://mhw-mathcode.github.io/p/2024-icpc-%E6%98%86%E6%98%8E%E5%8C%BA%E5%9F%9F%E8%B5%9B-vlog/8.1.jpg&#34;
	width=&#34;1279&#34;
	height=&#34;1706&#34;
	srcset=&#34;https://mhw-mathcode.github.io/p/2024-icpc-%E6%98%86%E6%98%8E%E5%8C%BA%E5%9F%9F%E8%B5%9B-vlog/8.1_hu_ff5436bacf951198.jpg 480w, https://mhw-mathcode.github.io/p/2024-icpc-%E6%98%86%E6%98%8E%E5%8C%BA%E5%9F%9F%E8%B5%9B-vlog/8.1_hu_8d52ddc404987615.jpg 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;肥牛芭乐&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;74&#34;
		data-flex-basis=&#34;179px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;随便逛逛~&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://mhw-mathcode.github.io/p/2024-icpc-%E6%98%86%E6%98%8E%E5%8C%BA%E5%9F%9F%E8%B5%9B-vlog/8.2.jpg&#34;
	width=&#34;1706&#34;
	height=&#34;1279&#34;
	srcset=&#34;https://mhw-mathcode.github.io/p/2024-icpc-%E6%98%86%E6%98%8E%E5%8C%BA%E5%9F%9F%E8%B5%9B-vlog/8.2_hu_4e56081ee91805a6.jpg 480w, https://mhw-mathcode.github.io/p/2024-icpc-%E6%98%86%E6%98%8E%E5%8C%BA%E5%9F%9F%E8%B5%9B-vlog/8.2_hu_b6fdbd6d84d49ac9.jpg 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;夜景 (1)&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;133&#34;
		data-flex-basis=&#34;320px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://mhw-mathcode.github.io/p/2024-icpc-%E6%98%86%E6%98%8E%E5%8C%BA%E5%9F%9F%E8%B5%9B-vlog/8.3.jpg&#34;
	width=&#34;1706&#34;
	height=&#34;1279&#34;
	srcset=&#34;https://mhw-mathcode.github.io/p/2024-icpc-%E6%98%86%E6%98%8E%E5%8C%BA%E5%9F%9F%E8%B5%9B-vlog/8.3_hu_501fd18c0af4a58e.jpg 480w, https://mhw-mathcode.github.io/p/2024-icpc-%E6%98%86%E6%98%8E%E5%8C%BA%E5%9F%9F%E8%B5%9B-vlog/8.3_hu_370a725b6073dd28.jpg 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;夜景 (2)&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;133&#34;
		data-flex-basis=&#34;320px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://mhw-mathcode.github.io/p/2024-icpc-%E6%98%86%E6%98%8E%E5%8C%BA%E5%9F%9F%E8%B5%9B-vlog/8.4.jpg&#34;
	width=&#34;1706&#34;
	height=&#34;1279&#34;
	srcset=&#34;https://mhw-mathcode.github.io/p/2024-icpc-%E6%98%86%E6%98%8E%E5%8C%BA%E5%9F%9F%E8%B5%9B-vlog/8.4_hu_5a2d82dcafa8dc22.jpg 480w, https://mhw-mathcode.github.io/p/2024-icpc-%E6%98%86%E6%98%8E%E5%8C%BA%E5%9F%9F%E8%B5%9B-vlog/8.4_hu_6ba792a00981851c.jpg 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;夜景 (3)&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;133&#34;
		data-flex-basis=&#34;320px&#34;
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;day3&#34;&gt;DAY3
&lt;/h2&gt;&lt;p&gt;因为行李问题没机会去玩，然后偷了群友拍的鸽子的图片~&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://mhw-mathcode.github.io/p/2024-icpc-%E6%98%86%E6%98%8E%E5%8C%BA%E5%9F%9F%E8%B5%9B-vlog/9.1.jpg&#34;
	width=&#34;1705&#34;
	height=&#34;1279&#34;
	srcset=&#34;https://mhw-mathcode.github.io/p/2024-icpc-%E6%98%86%E6%98%8E%E5%8C%BA%E5%9F%9F%E8%B5%9B-vlog/9.1_hu_6b03444ee78bc859.jpg 480w, https://mhw-mathcode.github.io/p/2024-icpc-%E6%98%86%E6%98%8E%E5%8C%BA%E5%9F%9F%E8%B5%9B-vlog/9.1_hu_59c8ae1d78a11b6c.jpg 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;鸽子 (1)&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;133&#34;
		data-flex-basis=&#34;319px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://mhw-mathcode.github.io/p/2024-icpc-%E6%98%86%E6%98%8E%E5%8C%BA%E5%9F%9F%E8%B5%9B-vlog/9.2.jpg&#34;
	width=&#34;1279&#34;
	height=&#34;1706&#34;
	srcset=&#34;https://mhw-mathcode.github.io/p/2024-icpc-%E6%98%86%E6%98%8E%E5%8C%BA%E5%9F%9F%E8%B5%9B-vlog/9.2_hu_5df2f1dfbbd745d0.jpg 480w, https://mhw-mathcode.github.io/p/2024-icpc-%E6%98%86%E6%98%8E%E5%8C%BA%E5%9F%9F%E8%B5%9B-vlog/9.2_hu_ab26599c88216ad.jpg 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;鸽子 (2)&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;74&#34;
		data-flex-basis=&#34;179px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://mhw-mathcode.github.io/p/2024-icpc-%E6%98%86%E6%98%8E%E5%8C%BA%E5%9F%9F%E8%B5%9B-vlog/9.3.jpg&#34;
	width=&#34;1279&#34;
	height=&#34;1302&#34;
	srcset=&#34;https://mhw-mathcode.github.io/p/2024-icpc-%E6%98%86%E6%98%8E%E5%8C%BA%E5%9F%9F%E8%B5%9B-vlog/9.3_hu_fd581cd88ec065e9.jpg 480w, https://mhw-mathcode.github.io/p/2024-icpc-%E6%98%86%E6%98%8E%E5%8C%BA%E5%9F%9F%E8%B5%9B-vlog/9.3_hu_ce7db4028d68873f.jpg 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;鸽子 (3)&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;98&#34;
		data-flex-basis=&#34;235px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;晚上连夜飞回天津，晚上到了已经凌晨了，累鼠了。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://mhw-mathcode.github.io/p/2024-icpc-%E6%98%86%E6%98%8E%E5%8C%BA%E5%9F%9F%E8%B5%9B-vlog/10.1.jpg&#34;
	width=&#34;1279&#34;
	height=&#34;1706&#34;
	srcset=&#34;https://mhw-mathcode.github.io/p/2024-icpc-%E6%98%86%E6%98%8E%E5%8C%BA%E5%9F%9F%E8%B5%9B-vlog/10.1_hu_80886e6a4040bbb3.jpg 480w, https://mhw-mathcode.github.io/p/2024-icpc-%E6%98%86%E6%98%8E%E5%8C%BA%E5%9F%9F%E8%B5%9B-vlog/10.1_hu_afb3d70bcbfe21ad.jpg 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;飞机上的天津夜景&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;74&#34;
		data-flex-basis=&#34;179px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;CCPC郑州站、ICPC沈阳站、ecfinal西安站就不转载了，一个是传奇赶路精疲力尽艰难守铜，一个是台风开局铜首结束道心破碎，一个是奖励名额纯纯旅游爽玩西安。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>大模型数据采样-情感攻击(实验进度)</title>
        <link>https://mhw-mathcode.github.io/p/%E5%A4%A7%E6%A8%A1%E5%9E%8B%E6%95%B0%E6%8D%AE%E9%87%87%E6%A0%B7-%E6%83%85%E6%84%9F%E6%94%BB%E5%87%BB%E5%AE%9E%E9%AA%8C%E8%BF%9B%E5%BA%A6/</link>
        <pubDate>Fri, 30 May 2025 11:12:02 +0800</pubDate>
        
        <guid>https://mhw-mathcode.github.io/p/%E5%A4%A7%E6%A8%A1%E5%9E%8B%E6%95%B0%E6%8D%AE%E9%87%87%E6%A0%B7-%E6%83%85%E6%84%9F%E6%94%BB%E5%87%BB%E5%AE%9E%E9%AA%8C%E8%BF%9B%E5%BA%A6/</guid>
        <description>&lt;p&gt;实验阶段暂不公开~&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Vscode 远程连接实验室服务器训练模型</title>
        <link>https://mhw-mathcode.github.io/p/vscode-%E8%BF%9C%E7%A8%8B%E8%BF%9E%E6%8E%A5%E5%AE%9E%E9%AA%8C%E5%AE%A4%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%AE%AD%E7%BB%83%E6%A8%A1%E5%9E%8B/</link>
        <pubDate>Mon, 26 May 2025 18:25:36 +0800</pubDate>
        
        <guid>https://mhw-mathcode.github.io/p/vscode-%E8%BF%9C%E7%A8%8B%E8%BF%9E%E6%8E%A5%E5%AE%9E%E9%AA%8C%E5%AE%A4%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%AE%AD%E7%BB%83%E6%A8%A1%E5%9E%8B/</guid>
        <description>&lt;h2 id=&#34;前言一些碎碎念&#34;&gt;前言（一些碎碎念）
&lt;/h2&gt;&lt;p&gt;高考结束以后什么也不懂的我报考了 cs 专业然后购入了一台集成显卡的电脑……大一的时候还好，只是知道带不动一些大型游戏，好在自己也并不打游戏。然后大二的时候 chatgpt 横空出世迅速占据了日常的生活，深度学习、神经网络直接闯入所有领域，在给各个领域注入新鲜血液与活力的同时，也让大家都多了一门必修课。越来越多的课程引入类似的知识与实验，当时也没有涉及很多大型的数据集与复杂的神经网络，勉强使用电脑的 cpu 运行应对实验。大三上知道了 google colab ，每天都有免费的 gpu 额度使用，甚至充钱可以用到 A100 （当然价格是相当高昂的）。大三下来到了学校的一个实验室做科研实习，LLM 相关的工作对于算力要求实在是很高，而且 colab 一些很不好的体验也难以满足需求，就找学长申请了一个实验室服务器的账号。在这个过程中也遇到了很多困难，也都找到了相应的答案，因此在这里记录一下。&lt;/p&gt;
&lt;p&gt;我使用的是 vscode + filezilla ，vscode 用于远程连接  + coding，filezilla 主要是传输数据。&lt;/p&gt;
&lt;h2 id=&#34;远程连接-ssh&#34;&gt;远程连接 ssh
&lt;/h2&gt;&lt;p&gt;首先学长会要你电脑主机的公钥，&lt;a class=&#34;link&#34; href=&#34;https://blog.csdn.net/qq_36631580/article/details/123530578&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;这篇文章&lt;/a&gt; 简洁而且有用，一般生成的公钥-私钥对会在这个路径下 C:/Users/用户名/.ssh 。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://mhw-mathcode.github.io/p/vscode-%E8%BF%9C%E7%A8%8B%E8%BF%9E%E6%8E%A5%E5%AE%9E%E9%AA%8C%E5%AE%A4%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%AE%AD%E7%BB%83%E6%A8%A1%E5%9E%8B/1.png&#34;
	width=&#34;312&#34;
	height=&#34;79&#34;
	srcset=&#34;https://mhw-mathcode.github.io/p/vscode-%E8%BF%9C%E7%A8%8B%E8%BF%9E%E6%8E%A5%E5%AE%9E%E9%AA%8C%E5%AE%A4%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%AE%AD%E7%BB%83%E6%A8%A1%E5%9E%8B/1_hu_1abaa16b4b71857f.png 480w, https://mhw-mathcode.github.io/p/vscode-%E8%BF%9C%E7%A8%8B%E8%BF%9E%E6%8E%A5%E5%AE%9E%E9%AA%8C%E5%AE%A4%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%AE%AD%E7%BB%83%E6%A8%A1%E5%9E%8B/1_hu_53e2ae4b007cf633.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;公钥与私钥&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;394&#34;
		data-flex-basis=&#34;947px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;然后使用 vscode 远程连接，需要用到这三个插件。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://mhw-mathcode.github.io/p/vscode-%E8%BF%9C%E7%A8%8B%E8%BF%9E%E6%8E%A5%E5%AE%9E%E9%AA%8C%E5%AE%A4%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%AE%AD%E7%BB%83%E6%A8%A1%E5%9E%8B/2.png&#34;
	width=&#34;521&#34;
	height=&#34;324&#34;
	srcset=&#34;https://mhw-mathcode.github.io/p/vscode-%E8%BF%9C%E7%A8%8B%E8%BF%9E%E6%8E%A5%E5%AE%9E%E9%AA%8C%E5%AE%A4%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%AE%AD%E7%BB%83%E6%A8%A1%E5%9E%8B/2_hu_6d343f857f1e83cb.png 480w, https://mhw-mathcode.github.io/p/vscode-%E8%BF%9C%E7%A8%8B%E8%BF%9E%E6%8E%A5%E5%AE%9E%E9%AA%8C%E5%AE%A4%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%AE%AD%E7%BB%83%E6%A8%A1%E5%9E%8B/2_hu_70af6169a8b50df6.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;插件&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;160&#34;
		data-flex-basis=&#34;385px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;然后如同 &lt;a class=&#34;link&#34; href=&#34;https://zhuanlan.zhihu.com/p/661255803&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;这篇文章&lt;/a&gt; 一样。&lt;/p&gt;
&lt;p&gt;但是我们操作以后可能会遇到一个问题：远程连接xxx失败！返回类似于以下形式的报错信息，也是卡了自己很长时间。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;Failed&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;to&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;parse&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;remote&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;port&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;server&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;output&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;Exec&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;server&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ssh&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;remote&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;xx&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;xx&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;xxx&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;xxx&lt;/span&gt; &lt;span class=&#34;nl&#34;&gt;failed&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Error&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;Error&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;opening&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;exec&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;server&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ssh&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;remote&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;xx&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;xx&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;xx&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nl&#34;&gt;xx&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Error&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;然后 &lt;a class=&#34;link&#34; href=&#34;https://blog.csdn.net/jk_lovers/article/details/147023428&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;这篇文章&lt;/a&gt; 给出了一个完美的解决方案（膜拜）！总结原因就是 vscode 和 ubuntu 中 glibc 的版本不匹配，但是我们肯定是不好直接更改实验室服务器的系统的，所以对自己的 vscode 降级（降级到1.98及以下）就是最好的方案。&lt;/p&gt;
&lt;h2 id=&#34;filezilla-传输数据&#34;&gt;Filezilla 传输数据
&lt;/h2&gt;&lt;p&gt;（其实可以直接拖拽完成，但是大规模数据还是用专业的软件比较好）&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://mhw-mathcode.github.io/p/vscode-%E8%BF%9C%E7%A8%8B%E8%BF%9E%E6%8E%A5%E5%AE%9E%E9%AA%8C%E5%AE%A4%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%AE%AD%E7%BB%83%E6%A8%A1%E5%9E%8B/3.png&#34;
	width=&#34;1919&#34;
	height=&#34;1138&#34;
	srcset=&#34;https://mhw-mathcode.github.io/p/vscode-%E8%BF%9C%E7%A8%8B%E8%BF%9E%E6%8E%A5%E5%AE%9E%E9%AA%8C%E5%AE%A4%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%AE%AD%E7%BB%83%E6%A8%A1%E5%9E%8B/3_hu_566d324e3adce547.png 480w, https://mhw-mathcode.github.io/p/vscode-%E8%BF%9C%E7%A8%8B%E8%BF%9E%E6%8E%A5%E5%AE%9E%E9%AA%8C%E5%AE%A4%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%AE%AD%E7%BB%83%E6%A8%A1%E5%9E%8B/3_hu_70a398dd51f19f7a.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;创建站点&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;168&#34;
		data-flex-basis=&#34;404px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;然后我在连接之后又出现了一个问题，filezilla 死活连接不上，一直连接超时，然后自己也是摸索出了一个解决办法，因为看到很多博主在连接时会输入密钥的路径，但是自己却没有这个输入的选项，因此觉得应该是这个地方的问题。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://mhw-mathcode.github.io/p/vscode-%E8%BF%9C%E7%A8%8B%E8%BF%9E%E6%8E%A5%E5%AE%9E%E9%AA%8C%E5%AE%A4%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%AE%AD%E7%BB%83%E6%A8%A1%E5%9E%8B/4.png&#34;
	width=&#34;540&#34;
	height=&#34;222&#34;
	srcset=&#34;https://mhw-mathcode.github.io/p/vscode-%E8%BF%9C%E7%A8%8B%E8%BF%9E%E6%8E%A5%E5%AE%9E%E9%AA%8C%E5%AE%A4%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%AE%AD%E7%BB%83%E6%A8%A1%E5%9E%8B/4_hu_ea96f7ee9e306b50.png 480w, https://mhw-mathcode.github.io/p/vscode-%E8%BF%9C%E7%A8%8B%E8%BF%9E%E6%8E%A5%E5%AE%9E%E9%AA%8C%E5%AE%A4%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%AE%AD%E7%BB%83%E6%A8%A1%E5%9E%8B/4_hu_7d526aae055d54cb.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;打开设置&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;243&#34;
		data-flex-basis=&#34;583px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://mhw-mathcode.github.io/p/vscode-%E8%BF%9C%E7%A8%8B%E8%BF%9E%E6%8E%A5%E5%AE%9E%E9%AA%8C%E5%AE%A4%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%AE%AD%E7%BB%83%E6%A8%A1%E5%9E%8B/5.png&#34;
	width=&#34;1218&#34;
	height=&#34;581&#34;
	srcset=&#34;https://mhw-mathcode.github.io/p/vscode-%E8%BF%9C%E7%A8%8B%E8%BF%9E%E6%8E%A5%E5%AE%9E%E9%AA%8C%E5%AE%A4%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%AE%AD%E7%BB%83%E6%A8%A1%E5%9E%8B/5_hu_dbd0b47c0833a8b0.png 480w, https://mhw-mathcode.github.io/p/vscode-%E8%BF%9C%E7%A8%8B%E8%BF%9E%E6%8E%A5%E5%AE%9E%E9%AA%8C%E5%AE%A4%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%AE%AD%E7%BB%83%E6%A8%A1%E5%9E%8B/5_hu_b593731d7b5ebc4e.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;添加密钥&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;209&#34;
		data-flex-basis=&#34;503px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;然后选择本地密钥所在的路径即可。&lt;/p&gt;
&lt;p&gt;连接成功以后直接把本地站点的文件拖进远程站点目标的文件夹下即可。&lt;/p&gt;
&lt;h2 id=&#34;配置环境&#34;&gt;配置环境
&lt;/h2&gt;&lt;p&gt;如果是实验室的服务器我觉得可能都已经安装好了Anaconda，并且已经创建并激活好了conda虚拟环境，如果是自己租赁的可能需要自己配置，参考 &lt;a class=&#34;link&#34; href=&#34;https://blog.csdn.net/fs1341825137/article/details/109681541&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;这篇文章&lt;/a&gt; 。&lt;/p&gt;
&lt;p&gt;然后我们直接初始化 python 环境即可。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;opt&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;anaconda3&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;bin&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;conda&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;init&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;bash&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;重启终端后，会在用户名前出现 (base) 证明成功了，使用 conda info -e 查看 conda 环境。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://mhw-mathcode.github.io/p/vscode-%E8%BF%9C%E7%A8%8B%E8%BF%9E%E6%8E%A5%E5%AE%9E%E9%AA%8C%E5%AE%A4%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%AE%AD%E7%BB%83%E6%A8%A1%E5%9E%8B/6.png&#34;
	width=&#34;636&#34;
	height=&#34;124&#34;
	srcset=&#34;https://mhw-mathcode.github.io/p/vscode-%E8%BF%9C%E7%A8%8B%E8%BF%9E%E6%8E%A5%E5%AE%9E%E9%AA%8C%E5%AE%A4%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%AE%AD%E7%BB%83%E6%A8%A1%E5%9E%8B/6_hu_a4a240df3a6b0490.png 480w, https://mhw-mathcode.github.io/p/vscode-%E8%BF%9C%E7%A8%8B%E8%BF%9E%E6%8E%A5%E5%AE%9E%E9%AA%8C%E5%AE%A4%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%AE%AD%E7%BB%83%E6%A8%A1%E5%9E%8B/6_hu_cbb4c107e547d3ed.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;查看虚拟环境&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;512&#34;
		data-flex-basis=&#34;1230px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;然后学长告诉我 /home/用户名 下的空间比较小，大的数据集放在 /data/用户名 。或许我们可以把所有东西（代码还有数据集）都放在 /data/用户名 下，这样会比较方便一点，具体参考 &lt;a class=&#34;link&#34; href=&#34;https://blog.csdn.net/qq_40345954/article/details/119031940&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;这篇文章&lt;/a&gt; 。&lt;/p&gt;
&lt;p&gt;紧接着又出现了一个问题。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://mhw-mathcode.github.io/p/vscode-%E8%BF%9C%E7%A8%8B%E8%BF%9E%E6%8E%A5%E5%AE%9E%E9%AA%8C%E5%AE%A4%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%AE%AD%E7%BB%83%E6%A8%A1%E5%9E%8B/7.png&#34;
	width=&#34;1358&#34;
	height=&#34;353&#34;
	srcset=&#34;https://mhw-mathcode.github.io/p/vscode-%E8%BF%9C%E7%A8%8B%E8%BF%9E%E6%8E%A5%E5%AE%9E%E9%AA%8C%E5%AE%A4%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%AE%AD%E7%BB%83%E6%A8%A1%E5%9E%8B/7_hu_b5a21e0cdb44302b.png 480w, https://mhw-mathcode.github.io/p/vscode-%E8%BF%9C%E7%A8%8B%E8%BF%9E%E6%8E%A5%E5%AE%9E%E9%AA%8C%E5%AE%A4%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%AE%AD%E7%BB%83%E6%A8%A1%E5%9E%8B/7_hu_37bd368f83fb6f06.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;网络问题&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;384&#34;
		data-flex-basis=&#34;923px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;emmm，在研究尝试了一下午无果后，去问了一下学长，然后得到了答案：服务器没网。我应该早点去问学长的www，在学长的帮助下得到了解决方案：&lt;/p&gt;
&lt;p&gt;在服务器终端上运行&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;http_proxy&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;http://&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$proxy_ip&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$proxy_port&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;https_proxy&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;http://&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$proxy_ip&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$proxy_port&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;all_proxy&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;socks5://&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$proxy_ip&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$proxy_port&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;其中 proxy_ip 和 proxy_port 分别代表代理服务器的 IP 地址和端口号（没错，代理服务器的 IP 和端口也是学长给的，我尝试了自己本地的代理没有成功）。&lt;/p&gt;
&lt;p&gt;然后我们直接创建并激活环境&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;conda create -n mypytorch &lt;span class=&#34;nv&#34;&gt;python&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;3.11
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;conda activate mypytorch
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;然后还需要安装最重要的 pytorch ，但是官网最新的版本好像不支持 conda 安装，于是我决定安装上一代版本。&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://pytorch.org/get-started/previous-versions/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;PyTorch  previous-versions&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;但是又又又又出现了新的问题：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://mhw-mathcode.github.io/p/vscode-%E8%BF%9C%E7%A8%8B%E8%BF%9E%E6%8E%A5%E5%AE%9E%E9%AA%8C%E5%AE%A4%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%AE%AD%E7%BB%83%E6%A8%A1%E5%9E%8B/8.png&#34;
	width=&#34;1432&#34;
	height=&#34;631&#34;
	srcset=&#34;https://mhw-mathcode.github.io/p/vscode-%E8%BF%9C%E7%A8%8B%E8%BF%9E%E6%8E%A5%E5%AE%9E%E9%AA%8C%E5%AE%A4%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%AE%AD%E7%BB%83%E6%A8%A1%E5%9E%8B/8_hu_be6cf03cdbf7a43b.png 480w, https://mhw-mathcode.github.io/p/vscode-%E8%BF%9C%E7%A8%8B%E8%BF%9E%E6%8E%A5%E5%AE%9E%E9%AA%8C%E5%AE%A4%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%AE%AD%E7%BB%83%E6%A8%A1%E5%9E%8B/8_hu_9c7fad9d3191452f.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;问题&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;226&#34;
		data-flex-basis=&#34;544px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;大概是因为 pytorch-cuda=12.4 因为版本比较新所以在当前配置的 Conda 通道中不可用，然后官方是提供了支持 CUDA 12.4 的安装命令：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;conda install pytorch torchvision torchaudio pytorch-cuda&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;12.4 -c pytorch -c nvidia
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;然后，终于！&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://mhw-mathcode.github.io/p/vscode-%E8%BF%9C%E7%A8%8B%E8%BF%9E%E6%8E%A5%E5%AE%9E%E9%AA%8C%E5%AE%A4%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%AE%AD%E7%BB%83%E6%A8%A1%E5%9E%8B/9.png&#34;
	width=&#34;1426&#34;
	height=&#34;886&#34;
	srcset=&#34;https://mhw-mathcode.github.io/p/vscode-%E8%BF%9C%E7%A8%8B%E8%BF%9E%E6%8E%A5%E5%AE%9E%E9%AA%8C%E5%AE%A4%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%AE%AD%E7%BB%83%E6%A8%A1%E5%9E%8B/9_hu_947ae371dabc58c6.png 480w, https://mhw-mathcode.github.io/p/vscode-%E8%BF%9C%E7%A8%8B%E8%BF%9E%E6%8E%A5%E5%AE%9E%E9%AA%8C%E5%AE%A4%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%AE%AD%E7%BB%83%E6%A8%A1%E5%9E%8B/9_hu_63597f750f24cf97.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;pytorch 顺利安装&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;160&#34;
		data-flex-basis=&#34;386px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://mhw-mathcode.github.io/p/vscode-%E8%BF%9C%E7%A8%8B%E8%BF%9E%E6%8E%A5%E5%AE%9E%E9%AA%8C%E5%AE%A4%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%AE%AD%E7%BB%83%E6%A8%A1%E5%9E%8B/10.png&#34;
	width=&#34;817&#34;
	height=&#34;190&#34;
	srcset=&#34;https://mhw-mathcode.github.io/p/vscode-%E8%BF%9C%E7%A8%8B%E8%BF%9E%E6%8E%A5%E5%AE%9E%E9%AA%8C%E5%AE%A4%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%AE%AD%E7%BB%83%E6%A8%A1%E5%9E%8B/10_hu_3e1d84d9cc449484.png 480w, https://mhw-mathcode.github.io/p/vscode-%E8%BF%9C%E7%A8%8B%E8%BF%9E%E6%8E%A5%E5%AE%9E%E9%AA%8C%E5%AE%A4%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%AE%AD%E7%BB%83%E6%A8%A1%E5%9E%8B/10_hu_c3c8815f1eae4c94.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;顺利打印 pytorch 版本号&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;430&#34;
		data-flex-basis=&#34;1032px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;得到了 pytorch 版本号！&lt;/p&gt;
&lt;h2 id=&#34;trick&#34;&gt;trick
&lt;/h2&gt;&lt;h3 id=&#34;trick-1&#34;&gt;trick (1)
&lt;/h3&gt;&lt;p&gt;控制使用的显卡 id&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;os&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;os&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;environ&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;CUDA_VISIBLE_DEVICES&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;1&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;trick-2&#34;&gt;trick (2)
&lt;/h3&gt;&lt;p&gt;使用 jupyter&lt;/p&gt;
&lt;p&gt;终端执行命令 &lt;code&gt;conda install jupyter&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;vscode 中安装插件 jupyter&lt;/p&gt;
&lt;h3 id=&#34;trick-3&#34;&gt;trick (3)
&lt;/h3&gt;&lt;p&gt;在连接服务器的 vscode 上使用 copilot&lt;/p&gt;
&lt;p&gt;参考 &lt;a class=&#34;link&#34; href=&#34;https://blog.csdn.net/qq_32057921/article/details/145764603&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;这篇文章&lt;/a&gt; ，秒解决~&lt;/p&gt;
&lt;h3 id=&#34;trick-4&#34;&gt;trick (4)
&lt;/h3&gt;&lt;p&gt;在本地通过 py 代码控制服务器运行指令或者下载文件与文件夹&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;27
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;28
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;29
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;30
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;31
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;32
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;33
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;34
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;35
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;36
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;37
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;38
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;39
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;40
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;41
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;42
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;43
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;44
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;45
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-py&#34; data-lang=&#34;py&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;paramiko&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;scp&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;SCPClient&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 连接参数&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;hostname&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;      &lt;span class=&#34;c1&#34;&gt;# 云服务器 IP&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;port&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;22&lt;/span&gt;                     &lt;span class=&#34;c1&#34;&gt;# 一般是 22&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;username&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;           &lt;span class=&#34;c1&#34;&gt;# 云服务器用户名（如 root）&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# password = &amp;#39;your_password&amp;#39;       # 云服务器密码&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;control&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;command&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;None&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;c1&#34;&gt;# 创建 SSH 客户端&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;ssh&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;paramiko&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;SSHClient&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;ssh&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;set_missing_host_key_policy&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;paramiko&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;AutoAddPolicy&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;ssh&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;connect&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;hostname&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;port&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;username&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;c1&#34;&gt;# 控制服务器执行远程命令&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;try&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;stdin&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;stdout&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;stderr&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ssh&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;exec_command&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;command&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;except&lt;/span&gt; &lt;span class=&#34;ne&#34;&gt;Exception&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;sa&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;命令执行失败: &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;out&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;err&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;stdout&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;read&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;decode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(),&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;stderr&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;read&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;decode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;ssh&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;close&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;out&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;err&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;download&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;():&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;c1&#34;&gt;# 创建SCP客户端&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;ssh&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;paramiko&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;SSHClient&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;ssh&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;set_missing_host_key_policy&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;paramiko&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;AutoAddPolicy&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;ssh&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;connect&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;hostname&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;port&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;username&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;scp&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;SCPClient&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ssh&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;get_transport&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;c1&#34;&gt;# 下载文件与文件夹&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;try&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;c1&#34;&gt;# 想要下载的文件或者文件夹  下载的目录&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;scp&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;get&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;scp&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;get&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;recursive&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;True&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;文件下载成功&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;except&lt;/span&gt; &lt;span class=&#34;ne&#34;&gt;Exception&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;sa&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;文件下载失败: &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;c1&#34;&gt;# 关闭SCP和SSH连接&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;scp&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;close&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;ssh&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;close&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;虚拟机联网小插曲&#34;&gt;虚拟机联网（小插曲）
&lt;/h2&gt;&lt;p&gt;当时试了很多方法也没有让服务器连接上网络，于是我决定去自己的虚拟机上先配置好深度学习的环境，然后把环境文件直接传输到服务器上。然后很逆天的发现，自己的虚拟机也连不上网络？然后有试了很多乱七八糟的方法，直到我看到了 &lt;a class=&#34;link&#34; href=&#34;https://blog.csdn.net/hhc550056259/article/details/123916999&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;这篇文章&lt;/a&gt; ，直接还原默认设置，完美解决了！&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://mhw-mathcode.github.io/p/vscode-%E8%BF%9C%E7%A8%8B%E8%BF%9E%E6%8E%A5%E5%AE%9E%E9%AA%8C%E5%AE%A4%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%AE%AD%E7%BB%83%E6%A8%A1%E5%9E%8B/11.png&#34;
	width=&#34;1919&#34;
	height=&#34;1139&#34;
	srcset=&#34;https://mhw-mathcode.github.io/p/vscode-%E8%BF%9C%E7%A8%8B%E8%BF%9E%E6%8E%A5%E5%AE%9E%E9%AA%8C%E5%AE%A4%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%AE%AD%E7%BB%83%E6%A8%A1%E5%9E%8B/11_hu_dc4d7013830f8483.png 480w, https://mhw-mathcode.github.io/p/vscode-%E8%BF%9C%E7%A8%8B%E8%BF%9E%E6%8E%A5%E5%AE%9E%E9%AA%8C%E5%AE%A4%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%AE%AD%E7%BB%83%E6%A8%A1%E5%9E%8B/11_hu_65700df208955abd.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;虚拟机联网&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;168&#34;
		data-flex-basis=&#34;404px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;可以看到后面直接 ping baidu.com 正在顺利的进行着。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>MyFirstBlog</title>
        <link>https://mhw-mathcode.github.io/p/myfirstblog/</link>
        <pubDate>Tue, 21 Jan 2025 10:09:52 +0800</pubDate>
        
        <guid>https://mhw-mathcode.github.io/p/myfirstblog/</guid>
        <description>&lt;h2 id=&#34;hello-world&#34;&gt;hello world!
&lt;/h2&gt;</description>
        </item>
        <item>
        <title>归档</title>
        <link>https://mhw-mathcode.github.io/archives/</link>
        <pubDate>Tue, 28 May 2019 00:00:00 +0000</pubDate>
        
        <guid>https://mhw-mathcode.github.io/archives/</guid>
        <description></description>
        </item>
        <item>
        <title>关于</title>
        <link>https://mhw-mathcode.github.io/%E5%85%B3%E4%BA%8E/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>https://mhw-mathcode.github.io/%E5%85%B3%E4%BA%8E/</guid>
        <description>&lt;p&gt;这是一个记录mhw一系列想法的博客。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>链接</title>
        <link>https://mhw-mathcode.github.io/%E9%93%BE%E6%8E%A5/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>https://mhw-mathcode.github.io/%E9%93%BE%E6%8E%A5/</guid>
        <description>&lt;p&gt;依托的一些技术平台。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>搜索</title>
        <link>https://mhw-mathcode.github.io/search/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>https://mhw-mathcode.github.io/search/</guid>
        <description></description>
        </item>
        
    </channel>
</rss>
