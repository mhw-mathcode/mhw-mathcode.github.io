[{"content":"","date":"2025-06-22T11:50:20+08:00","permalink":"https://mhw-mathcode.github.io/p/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/","title":"学习笔记 数据结构"},{"content":"开个坑，主要是记录后续复习操作系统的一些笔记与完成 6.S081 课程的 lab 。\n","date":"2025-06-17T18:27:49+08:00","permalink":"https://mhw-mathcode.github.io/p/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/","title":"学习笔记-操作系统"},{"content":"0 算法速览 监督学习算法：\n线性回归（Linear Regression）：用于回归任务，预测连续的数值。 逻辑回归（Logistic Regression）：用于二分类任务，预测类别。 决策树（Decision Tree）：基于树状结构进行决策的分类或回归方法。 支持向量机（SVM）：用于分类任务，构建超平面进行分类。 K近邻算法 集成学习 无监督学习算法：\nK-means 聚类：通过聚类中心将数据分组。 主成分分析（PCA）：用于降维，提取数据的主成分。 0-1 线性回归 线性回归 (Linear Regression) 是一种用于预测连续值的最基本的机器学习算法，它假设目标变量 y 和特征变量 x 之间存在线性关系，并试图找到一条最佳拟合直线来描述这种关系。\n常用的误差函数是均方误差 (MSE) : $MSE = 1/n * Σ(y_i - y_{pred_i})^2$\n如何求解？\n最小二乘法 最小二乘法的目标是最小化残差平方和（RSS），其公式为：$RSS = \\sum_{i=1}^n(y_i - \\hat{y}_i)^2$\n得到最佳的 $w, b$\n$$ \\begin{bmatrix} w \\\\ b \\end{bmatrix} = \\begin{bmatrix} \\sum_{i=1}^n x_i^2 \u0026 \\sum_{i=1}^n x_i \\\\ \\sum_{i=1}^n x_i \u0026 n \\end{bmatrix}^{-1} \\begin{bmatrix} \\sum_{i=1}^n x_i y_i \\\\ \\sum_{i=1}^n y_i \\end{bmatrix} $$ 梯度下降法 梯度下降法的目标是最小化损失函数 $J(w,b)$ 。对于线性回归问题，通常使用均方误差（MSE）作为损失函数：\n$$ J(w, b) = \\frac{1}{2m} \\sum_{i=1}^{m} (y_i - \\hat{y}_i)^2 $$参数更新：\n$$ w := w - \\alpha \\frac{\\partial J}{\\partial w} \\quad b := b - \\alpha \\frac{\\partial J}{\\partial b} $$梯度下降法的步骤\n初始化参数：初始化 w 和 b 的值（通常设为 0 或随机值）。 计算损失函数：计算当前参数下的损失函数值 $J(w,b)$ 。 计算梯度：计算损失函数对 w 和 b 的偏导数。 更新参数：根据梯度更新 w 和 b。 重复迭代：重复步骤 2 到 4，直到损失函数收敛或达到最大迭代次数。 0-2 逻辑回归 逻辑回归（Logistic Regression）是一种广泛应用于分类问题的统计学习方法，尽管名字中带有\u0026quot;回归\u0026quot;，但它实际上是一种用于二分类或多分类问题的算法。\n逻辑回归通过使用逻辑函数（也称为 Sigmoid 函数）将线性回归的输出映射到 0 和 1 之间，从而预测某个事件发生的概率。建立模型：\n\\[ p(y = 1|X) = \\sigma(w^T X + b) \\]其中：\n\\( X \\) 是输入特征（可以是多个特征组成的向量）。 \\( w \\) 是权重向量。 \\( b \\) 是偏置项。 \\(\\sigma(z) = \\frac{1}{1+e^{-z}}\\) 是Sigmoid函数。Sigmoid函数将模型的输出值 \\((w^T X + b)\\) 映射到0到1之间，因此它可以看作是属于类别1的概率。注意 $\\sigma\u0026rsquo;(z) = \\sigma(z)(1 - \\sigma(z))$ 。 使用对数损失函数\n\\[ L(\\theta) = \\begin{cases} -\\log(p), \u0026 \\text{if } y = 1 \\\\ -\\log(1-p), \u0026 \\text{if } y = 0 \\end{cases} \\]合并得到单个样品的损失函数\n\\[ L(\\theta) = -ylog(p)-(1-y)log(1-p) \\]因此总体损失函数（也就是交叉熵损失函数）\n\\[ L(\\theta) = -\\frac{1}{m} \\sum_{i=1}^{m} \\left[ y^{(i)} \\log(p^{(i)}) + (1 - y^{(i)}) \\log(1 - p^{(i)}) \\right] \\]如何求解？\n梯度下降法\n对 \\(w\\) 的梯度： \\[ \\frac{\\partial J(w, b)}{\\partial w} = \\frac{1}{m} \\sum_{i=1}^{m} (h_\\theta(x^{(i)}) - y^{(i)}) x^{(i)} \\]对 \\(b\\) 的梯度： \\[ \\frac{\\partial J(w, b)}{\\partial b} = \\frac{1}{m} \\sum_{i=1}^{m} (h_\\theta(x^{(i)}) - y^{(i)}) \\]\n0-3 决策树 1 引言 1-1 什么是机器学习 一个好的学习问题定义如下：一个程序被认为能从经验 E 中学习，解决任务 T ，达到性能度量值 P ，当且仅当，有了经验 E 后，经过 P 评判，程序在处理 T 时的性能有所提升。\n目前存在几种不同类型的学习算法，其中主要的两种类型被我们称之为：监督学习和无监督学习。\n1.2 监督学习 监督学习：给定带有标签的数据，模型通过学习输入和标签之间的关系来做预测。\n回归 (regression) 问题：推测出这一系列连续值属性。\n分类 (classification) 问题：推测出离散的输出值。\n1.3 无监督学习 无监督学习：没有标签的数据，模型通过探索数据中的结构或模式来进行学习。\n聚类算法：将数据集划分成两个不同的簇。\n鸡尾酒算法：分离两种声音。（一个具体实例，仅仅只需要一行代码实现）\n1 [W,s,v] = svd((repmat(sum(x.*x,1),size(x,1),1).*x)*x\u0026#39;); 2 单变量线性回归 (Linear Regression with One Variable) ","date":"2025-06-16T19:29:56+08:00","permalink":"https://mhw-mathcode.github.io/p/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/","title":"学习笔记-机器学习"},{"content":"DAY1 因为队友有考试，所以我们集体在周六早晨赶的七点的飞机来昆明，当时在登机的时候遇到超级漂亮的天空，笑着和队友说这是大捷的前兆hh。\n然后来酒店办了入住直接冲向学校了，当时整个人都饿毁了，两荤三素库库炫，也没来得及拍照 。不过云大真的很漂亮，整个云南十二月还是绿叶环绕，本北方人表示哪见过这个。\n然后热身赛直接开打。A题a+b？B题队友猜一发结论直接过了。D题偷听斜对面什么父亲，然后随便一手模发现每个点权值减去父亲权值乘起来直接过了。C题队友一开始思路有点问题，后来lyr测点别的东西我俩直接玩手机了。结果快最后了zmd想到了正解，赛后一问黄队还真对了。\nDAY2 有点紧张！沈阳铜首确实给我们的压力太大了，赛前买了一大批物资，面包，士力架，红牛，赛前满足每位队员的一切合理与不合理的需求(bushi)\n开打！上来队友直接扔给我一道计算几何，说极角排序一下应该就完了。我觉得也是于是上机开始敲。小小调整一下交了结果wa了。此时队友上机写M构造，结果几种方式全都有问题。只能说逆风开局是我们队的常态，甚至比沈阳的台风开局还要好一点。然后zmd开始了无敌节奏，先想出了M超级正确且好写且可证明的思路，直接过了，然后上机又把J题秒了。期间lyr帮忙手推了J题小数据特例并且帮我找到了H题一个小讨论的错误（某人唯二贡献哈哈哈）。然后我上机改改也过了H。赛后想想这个H当时真的很唐，直接用atan2搞出角度其实就完了，根本用不到极角排序。\n然后有点卡题的，当时我说开出CGL其实是应该能稳银的（很棒的前瞻性），于是开始全力开这三题。lyr一直在想L，我看了C就觉得是根号分治，但是一直不知道分完怎么算。zmd张老板直接灵感一现，从结果往回推，轻松过样例！交上去却t了。然后下机想想就找到了问题，问我一个式子，（然后巴拉巴拉交流一堆），改一下直接过了！这个C开的很帅。然后我顺着zmd思路想G题，zmd写了一个记忆化搜索，re了，改了下wa了，好在很快找到反例发现比较难记忆，并且也改不对样例。这时候我就想是不是直接爆搜就完了，上机十分钟写完肯定过样例的，然后试了极限的俩数结果都跑的飞快？于是决定交一发结果直接ac了？？？我真的对这发没报希望啊？最后直接all in L题。zmd和lyr统一了思路，lyr写完交上去wa了，并且我造了一堆样例都没能出错。这时候张老板直接把lyr踹下机开始重构，微微调整过了第一个样例就觉得直接交，结果t了？当时三人盯着那几个while循环瞅，lyr建议关流在交一次（因为debug所以关了关流，交的时候忘开了），结果直接a了！当时张老板直接大喊：“过了！”我们直接下班观战！\n最后稳稳拿银~\n很不错的昆明，最后没有遗憾退役，赛后要了哥哥的签名和合照，美滋滋~\n晚上去一家特色菜馆，超级火爆，最后人均20？\n随便逛逛~\nDAY3 因为行李问题没机会去玩，然后偷了群友拍的鸽子的图片~\n晚上连夜飞回天津，晚上到了已经凌晨了，累鼠了。\nCCPC郑州站、ICPC沈阳站、ecfinal西安站就不转载了，一个是传奇赶路精疲力尽艰难守铜，一个是台风开局铜首结束道心破碎，一个是奖励名额纯纯旅游爽玩西安。\n","date":"2025-05-30T20:02:21+08:00","permalink":"https://mhw-mathcode.github.io/p/2024-icpc-%E6%98%86%E6%98%8E%E5%8C%BA%E5%9F%9F%E8%B5%9B-vlog/","title":"2024 ICPC 昆明区域赛 vlog"},{"content":"实验阶段暂不公开~\n","date":"2025-05-30T11:12:02+08:00","permalink":"https://mhw-mathcode.github.io/p/%E5%A4%A7%E6%A8%A1%E5%9E%8B%E6%95%B0%E6%8D%AE%E9%87%87%E6%A0%B7-%E6%83%85%E6%84%9F%E6%94%BB%E5%87%BB%E5%AE%9E%E9%AA%8C%E8%BF%9B%E5%BA%A6/","title":"大模型数据采样-情感攻击(实验进度)"},{"content":"前言（一些碎碎念） 高考结束以后什么也不懂的我报考了 cs 专业然后购入了一台集成显卡的电脑……大一的时候还好，只是知道带不动一些大型游戏，好在自己也并不打游戏。然后大二的时候 chatgpt 横空出世迅速占据了日常的生活，深度学习、神经网络直接闯入所有领域，在给各个领域注入新鲜血液与活力的同时，也让大家都多了一门必修课。越来越多的课程引入类似的知识与实验，当时也没有涉及很多大型的数据集与复杂的神经网络，勉强使用电脑的 cpu 运行应对实验。大三上知道了 google colab ，每天都有免费的 gpu 额度使用，甚至充钱可以用到 A100 （当然价格是相当高昂的）。大三下来到了学校的一个实验室做科研实习，LLM 相关的工作对于算力要求实在是很高，而且 colab 一些很不好的体验也难以满足需求，就找学长申请了一个实验室服务器的账号。在这个过程中也遇到了很多困难，也都找到了相应的答案，因此在这里记录一下。\n我使用的是 vscode + filezilla ，vscode 用于远程连接 + coding，filezilla 主要是传输数据。\n远程连接 ssh 首先学长会要你电脑主机的公钥，这篇文章 简洁而且有用，一般生成的公钥-私钥对会在这个路径下 C:/Users/用户名/.ssh 。\n然后使用 vscode 远程连接，需要用到这三个插件。\n然后如同 这篇文章 一样。\n但是我们操作以后可能会遇到一个问题：远程连接xxx失败！返回类似于以下形式的报错信息，也是卡了自己很长时间。\n1 2 3 Failed to parse remote port from server output Exec server for ssh-remote+xx.xx.xxx.xxx failed: Error Error opening exec server for ssh-remote+xx.xx.xx.xx: Error 然后 这篇文章 给出了一个完美的解决方案（膜拜）！总结原因就是 vscode 和 ubuntu 中 glibc 的版本不匹配，但是我们肯定是不好直接更改实验室服务器的系统的，所以对自己的 vscode 降级（降级到1.98及以下）就是最好的方案。\nFilezilla 传输数据 （其实可以直接拖拽完成，但是大规模数据还是用专业的软件比较好）\n然后我在连接之后又出现了一个问题，filezilla 死活连接不上，一直连接超时，然后自己也是摸索出了一个解决办法，因为看到很多博主在连接时会输入密钥的路径，但是自己却没有这个输入的选项，因此觉得应该是这个地方的问题。\n然后选择本地密钥所在的路径即可。\n连接成功以后直接把本地站点的文件拖进远程站点目标的文件夹下即可。\n配置环境 如果是实验室的服务器我觉得可能都已经安装好了Anaconda，并且已经创建并激活好了conda虚拟环境，如果是自己租赁的可能需要自己配置，参考 这篇文章 。\n然后我们直接初始化 python 环境即可。\n1 /opt/anaconda3/bin/conda init bash 重启终端后，会在用户名前出现 (base) 证明成功了，使用 conda info -e 查看 conda 环境。\n然后学长告诉我 /home/用户名 下的空间比较小，大的数据集放在 /data/用户名 。或许我们可以把所有东西（代码还有数据集）都放在 /data/用户名 下，这样会比较方便一点，具体参考 这篇文章 。\n紧接着又出现了一个问题。\nemmm，在研究尝试了一下午无果后，去问了一下学长，然后得到了答案：服务器没网。我应该早点去问学长的www，在学长的帮助下得到了解决方案：\n在服务器终端上运行\n1 export http_proxy=\u0026#34;http://$proxy_ip:$proxy_port\u0026#34; https_proxy=\u0026#34;http://$proxy_ip:$proxy_port\u0026#34; all_proxy=\u0026#34;socks5://$proxy_ip:$proxy_port\u0026#34; 其中 proxy_ip 和 proxy_port 分别代表代理服务器的 IP 地址和端口号（没错，代理服务器的 IP 和端口也是学长给的，我尝试了自己本地的代理没有成功）。\n然后我们直接创建并激活环境\n1 2 conda create -n mypytorch python=3.11 conda activate mypytorch 然后还需要安装最重要的 pytorch ，但是官网最新的版本好像不支持 conda 安装，于是我决定安装上一代版本。\nPyTorch previous-versions\n但是又又又又出现了新的问题：\n大概是因为 pytorch-cuda=12.4 因为版本比较新所以在当前配置的 Conda 通道中不可用，然后官方是提供了支持 CUDA 12.4 的安装命令：\n1 conda install pytorch torchvision torchaudio pytorch-cuda=12.4 -c pytorch -c nvidia 然后，终于！\n得到了 pytorch 版本号！\ntrick trick (1) 控制使用的显卡 id\n1 2 import os os.environ[\u0026#39;CUDA_VISIBLE_DEVICES\u0026#39;] = \u0026#39;1\u0026#39; trick (2) 使用 jupyter\n终端执行命令 conda install jupyter\nvscode 中安装插件 jupyter\ntrick (3) 在连接服务器的 vscode 上使用 copilot\n参考 这篇文章 ，秒解决~\ntrick (4) 在本地通过 py 代码控制服务器运行指令或者下载文件与文件夹\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 import paramiko from scp import SCPClient # 连接参数 hostname = \u0026#39;\u0026#39; # 云服务器 IP port = 22 # 一般是 22 username = \u0026#39;\u0026#39; # 云服务器用户名（如 root） # password = \u0026#39;your_password\u0026#39; # 云服务器密码 def control(command=None): # 创建 SSH 客户端 ssh = paramiko.SSHClient() ssh.set_missing_host_key_policy(paramiko.AutoAddPolicy()) ssh.connect(hostname, port, username) # 控制服务器执行远程命令 try: stdin, stdout, stderr = ssh.exec_command(command) except Exception as e: print(f\u0026#34;命令执行失败: {e}\u0026#34;) out, err = stdout.read().decode(), stderr.read().decode() ssh.close() return out, err def download(): # 创建SCP客户端 ssh = paramiko.SSHClient() ssh.set_missing_host_key_policy(paramiko.AutoAddPolicy()) ssh.connect(hostname, port, username) scp = SCPClient(ssh.get_transport()) # 下载文件与文件夹 try: # 想要下载的文件或者文件夹 下载的目录 scp.get(\u0026#39;\u0026#39;, \u0026#39;\u0026#39;) scp.get(\u0026#39;\u0026#39;, \u0026#39;\u0026#39;, recursive=True) print(\u0026#34;文件下载成功\u0026#34;) except Exception as e: print(f\u0026#34;文件下载失败: {e}\u0026#34;) # 关闭SCP和SSH连接 scp.close() ssh.close() 虚拟机联网（小插曲） 当时试了很多方法也没有让服务器连接上网络，于是我决定去自己的虚拟机上先配置好深度学习的环境，然后把环境文件直接传输到服务器上。然后很逆天的发现，自己的虚拟机也连不上网络？然后有试了很多乱七八糟的方法，直到我看到了 这篇文章 ，直接还原默认设置，完美解决了！\n可以看到后面直接 ping baidu.com 正在顺利的进行着。\n","date":"2025-05-26T18:25:36+08:00","permalink":"https://mhw-mathcode.github.io/p/vscode-%E8%BF%9C%E7%A8%8B%E8%BF%9E%E6%8E%A5%E5%AE%9E%E9%AA%8C%E5%AE%A4%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%AE%AD%E7%BB%83%E6%A8%A1%E5%9E%8B/","title":"Vscode 远程连接实验室服务器训练模型"},{"content":"hello world! ","date":"2025-01-21T10:09:52+08:00","permalink":"https://mhw-mathcode.github.io/p/myfirstblog/","title":"MyFirstBlog"}]